@model VetManage.Web.Models.Messages.MessageViewModel

@{
    ViewData["Title"] = "Create";

     ViewBag.items = new[] {"Bold", "Italic", "Underline", "StrikeThrough", "|",
                "Formats", "Alignments", "OrderedList", "UnorderedList",
                "Outdent", "Indent", "|", "Undo", "Redo" };
}

<div class="content-container p-3">
    <div class="dark-5">
        <div class="p-3 d-flex justify-content-between align-items-center border-bottom">
            <a asp-action="Create" class="btn btn-outline-light">New Message</a>
            <h2>Outbox</h2>
        </div>
        <div class="row">
            <div class="col-2 pe-0">
                <partial name="_SidebarMessages"/>
            </div>
            <div class="col-10 pt-3 ps-0">
                <div class="form-container p-3">
                    <form asp-action="Create" method="post" id="messagesForm">
                        <div asp-validation-summary="ModelOnly"></div>
                        <div class="row mb-2">
                            <label class="col-1 col-form-label">To: </label>
                            <div class="col-11">
                                <ejs-multiselect id="Recipients" ejs-for="Recipients" name="Recipients" placeholder="Recipients" cssClass="form-control" enableSelectionOrder="false" dataSource="@ViewData["Recipients"]" mode="CheckBox" allowFiltering="true" showSelectAll="true" filterBarPlaceholder="Recipients" select="onSelect">
                                    <e-multiselect-fields text="Username" value="Id"></e-multiselect-fields>
                                </ejs-multiselect>
                                <span asp-validation-for="Recipients" id="recipientsVal" class="text-danger"></span>
                                @*<input asp-for="Recipients" type="text" value="" class="form-control" />*@
                            </div>
                        </div>
                        <div class="row mb-2">
                            <label class="col-1 col-form-label">Subject: </label>
                            <div class="col-11">
                                <input asp-for="Subject" class="form-control" />
                                <span asp-validation-for="Subject" class="text-danger"></span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-12">
                                <div class="editor-container">
                                    <ejs-richtexteditor id="Body" name="Body" ejs-for="Body" beforeDialogOpen="onDialogOpen" actionBegin="onActionBegin" created="created" change="onChange">
                                        <e-richtexteditor-pastecleanupsettings plainText="true"></e-richtexteditor-pastecleanupsettings>
                                        <e-richtexteditor-iframesettings enable="true"></e-richtexteditor-iframesettings>
                                        <e-content-template>
                                        </e-content-template>
                                        <e-richtexteditor-toolbarsettings type="Expand" items="@ViewBag.items"></e-richtexteditor-toolbarsettings>
                                    </ejs-richtexteditor>

                                </div>
                                <span asp-validation-for="Body" id="bodyVal" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a asp-action="Inbox" class="btn btn-danger">Cancel</a>
                                <button type="submit" id="submitBtn" class="btn btn-success">Send</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        // TODO: Possibly delete all of this
        let subject = $("#Subject");
        let body = $("#Body");
        let message = {};

    </script>
}

<script type="text/javascript">
    let defaultRTE, formObject, options;
    let aspRichTextVal = document.getElementById('bodyVal');
    let recipientsVal = document.getElementById('recipientsVal');

    function created() {
        options = {
            rules: {
                'Body': {
                    required: true
                }
            }
        };
        formObject = new ej.inputs.FormValidator('#messagesForm', options);
    };

    window.onload = function () {
        document.getElementById('submitBtn').onclick = function () {
            getValue();
        };
    }

    function getValue() {
        let isValid = formObject.validate();
    
        if (!isValid) {
            aspRichTextVal.innerHTML = `<span>You must enter a Body.</span>`
        }
    }

    function onChange() {
        console.log("hello");
        aspRichTextVal.innerHTML = "";
    }

    function onDialogOpen(args) {
        args.cancel = true;
    }

    function onActionBegin(args) {
        if (args.type === 'drop'
            || args.type === 'dragstart'
            || args.requestType === 'Image') {
            args.cancel = true;
        }
    }

    function onSelect(args){
        recipientsVal.innerHTML = "";
    }
</script>

@*<script type="text/javascript">
    // TODO: Possibly delete all of this
    let recipients = [];

    function onSelectedAll(args){
        if (args.isChecked) {
            addAllRecipients(args.itemData);
        } else {
            recipients = [];
        }

        console.log(recipients);
    }

    function addAllRecipients(data) {
        for (let i = 0; i < data; i++) {
            recipients.push(data);
        }
    }

    function onRemoved(args) {
        let index = recipients.indexOf(args.itemData);

        if (index > -1) { 
            recipients.splice(index, 1);
        }
    }

    function onSelect(args){
        recipients.push(args.itemData);
    }
</script>*@
